name: Build multiarch image

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  get-app-name:
    runs-on: ubuntu-22.04
    name: Get App-Name
    outputs:
      app_name: ${{ steps.export-app-name.outputs.app_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get app-name
        id: export-app-name
        run: |
          NAME=$(cat ./app/AppManifest.json | jq -r '.name')
          echo "app_name=$NAME" >> $GITHUB_ENV

  build-image-multiarch:
    runs-on: ubuntu-22.04
    name: Build multiarch Docker image
    needs: [get-app-name]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY }}/vehicle-app-python-template:${{ needs.get-app-name.outputs.app_name }}-${{ github.run_id }} --platform=$TARGETPLATFORM .
        env:
          TARGETPLATFORM: linux/amd64  # Adjust as per your architecture needs
          DOCKER_BUILDKIT: 1

      - name: Push Docker image to registry
        run: docker push ${{ secrets.REGISTRY }}/vehicle-app-python-template:${{ needs.get-app-name.outputs.app_name }}-${{ github.run_id }}
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_BUILDKIT: 1
          TARGETPLATFORM: linux/amd64  # Adjust as per your architecture needs

  merge-test-results:
    runs-on: ubuntu-22.04
    name: Merge Trivy results
    needs: build-image-multiarch
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          delete-merged: true
          name: test-results-trivy
          pattern: test-results-*
